@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@300;400;500;600&family=Roboto+Condensed:wght@300;400;700&display=swap');

.bgImage{
    width: 100%;
    position: absolute;
    top : 0;
    left : 0;
    z-index: -1;
}



.banner{
    width: 100%;
    position: absolute;
    /* Then in order to position it according to its parent element, i'm going to set position relative for
    this section element. */
    top: 100px;
    left: 50%;
    transform: translateX(-50%);
    text-align: center;
}

/* So in order to create 3d environment, we have to use css property called perspective,it shows us how far is
element away from the user. */
.banner-heading{
    margin-bottom: 40px;
    height: 300px;
    perspective: 500px;
    overflow: hidden;
    z-index: 10;
}

.banner-heading span{
    font-family: 'Oswald', sans-serif;
    font-size: 75px;
    font-weight: 800;
    color: #ffffff;
    text-shadow: 3px 3px 6px rgb(0, 0, 0);
    position: absolute;
    width: 100%;
    display: flex;
    text-transform: uppercase;
    justify-content: center;
    transform: translateZ(80px);
    letter-spacing: -10px;
    opacity: 0;
}

.heading-1{
    animation: animateHeading 12s 3s infinite;
}

.heading-2{
    animation: animateHeading 12s 6s infinite;
}

.heading-3{
    animation: animateHeading 12s 9s infinite;
}

/* All right, so the headings are hidden, but right now we have here a tiny issue, the scrollbar appeared, here down below*/
/* At the first step from zero percent to 3 percent, th headings will be hidden, the will have the exact same property that
that we assign to them by default, i mean those three properties, after that from 3% to 25% we will display back the heading
to its default position. In the default position, i mean the position when the heading is visible. */

@keyframes animateHeading{
    0%{
        transform: translateZ(80px);
        opacity: 0;
        letter-spacing: 30px;
    }

    3%{
        transform: translateZ(0);
        opacity: 1;
        letter-spacing: 15px;
    }

    /* After that from 3% to 25%, the heading will be visible and then from 25% to 28%, during this it will hide again */
    25%{
        transform: translateZ(0);
        opacity: 1;
        letter-spacing: 15px;
    }

    28%{
        transform: translateZ(80px);
        opacity: 0;
        letter-spacing: 30px;
    }

    100%{
        transform: translateZ(80px);
        opacity: 0;
        letter-spacing: 30px;
    }
    /* So we will add this cycle to all the headings, but with different delay times, so they will display and hide in 
    order. */
}

.banner-paragraph{
    font-size: 35px;
    font-weight: 400;
    text-transform: uppercase;
    color: #fff;
    background-color: rgba(0,0,0,0.6);
    width:30%;
    margin: 0 auto 40px;
    padding: 10px 0;
    box-shadow: 10px 10px 50px rgba(0,0,0,0.5);
    opacity: 0;
    visibility: hidden;
    animation: fadeAnimation 1s 1.5s forwards;
}

.banner-btn{
    width: 300px;
    height: 60px;
    background: linear-gradient(to right,#9b0e0e,#7a1010);
    font-size: 20px;
    text-transform: uppercase;
    border-radius: 3rem;
    border: 1px solid #800505;
    color: #fff;
    box-shadow: 10px 20px 30px rgba(0,0,0,0.5);
    text-shadow: 6px 6px 2px rgba(0,0,0,0.4);
    cursor: pointer;
    opacity: 0;
    visibility: hidden;
    animation: fadeAnimation 1s 2s forwards;
    position: relative;
    /* now in order to hide pseudo element we will use overflow hidden */
    overflow: hidden;
}

.banner-btn::before{
    content: "";
    width: 100%;
    height: 100%;
    background: linear-gradient(to right,transparent,#fff,transparent);
    position: absolute;
    /* then in order to position it according to its parent elements, which is the button we have to define the position
    of the botton as relative. */
    top:0;
    left:-100%;
    transform: skewX(-30deg);
    transition: left 0.5s;
}

.banner-btn:hover::before{
    left:100%;
}
/* Actually we will use this animation for both elements i mean the paragraph and the button as well, so overall we have
2 different steps, the starting point 0 percent and and the ending point 100 %. */
@keyframes fadeAnimation {
    0%{
        opacity: 0;
        visibility: visible;
    }
    100%{
        opacity: 1;
        visibility: visible;
    }
}